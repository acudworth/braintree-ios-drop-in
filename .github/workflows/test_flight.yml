name: TestFlight
on: [pull_request]
jobs:
  test_job:
    name: Push to TestFlight
    runs-on: macOS-latest
    env:
      PRODUCT_NAME: Drop-in Demo
      SCHEME: DropInDemo
    steps:
      # Checks: out a copy of your repository
      # - name: Checkout repository
      #   uses: actions/checkout@v1
      # - name: 'Upload app to TestFlight'
      #   uses: apple-actions/upload-testflight-build@v1
      #   with: 
      #     app-path: 'build/DropInDemo.ipa'
      #     app-type: 'ios'
      #     issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
      #     api-key-id: ${{ secrets.APPSTORE_API_KEY_ID }}
      #     api-private-key: ${{ secrets.APPSTORE_API_PRIVATE_KEY }}

      - name: Checkout project
        uses: actions/checkout@v1

      # - name: Set environment variables from project settings
      #   run: |
      #     exec .github/scripts/set-env-from-xcodeproj.sh

      - name: Import signing certificate
        env:
          SIGNING_CERTIFICATE_P12_DATA: ${{ secrets.SIGNING_CERTIFICATE_P12_DATA }}
          SIGNING_CERTIFICATE_PASSWORD: ${{ secrets.SIGNING_CERTIFICATE_PASSWORD }}
        run: |
          exec .github/scripts/import-certificate.sh

      - name: Import provisioning profile
        env:
          PROVISIONING_PROFILE_DATA: ${{ secrets.PROVISIONING_PROFILE_DATA }}
        run: |
          exec .github/scripts/import-profile.sh

      # - name: Build app
      #   run: |
      #     fastlane run build_app

      - name: pod install
        run: pod install

      - name: make build directory
        run: mkdir $PWD/build

      - name: build app step 1
        run: xcodebuild -workspace BraintreeDropIn.xcworkspace -scheme DropInDemo -sdk iphoneos -configuration Release archive -archivePath $PWD/build/DropInDemo.xcarchive

      - name: build app step 2
        run: xcodebuild -exportArchive -allowProvisioningUpdates -archivePath $PWD/build/DropInDemo.xcarchive -exportOptionsPlist exportOptions.plist -exportPath $PWD/build/DropInDemo.ipa

      - name: extract dSYM and rename
        run: zip -r $PWD/build/DropInDemo.app.dSYM.zip $PWD/build/DropInDemo.xcarchive/dSYMs/Drop-in\ Demo.app.dSYM/

      # - name: Upload build artifacts
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: build.log
      #     path: ~/Library/Logs/gym/*.log

      - name: 'Upload app to TestFlight'
        uses: apple-actions/upload-testflight-build@v1
        with: 
          app-path: '$PWD/build/DropInDemo.ipa'
          app-type: 'ios'
          issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
          api-key-id: ${{ secrets.APPSTORE_API_KEY_ID }}
          api-private-key: ${{ secrets.APPSTORE_API_PRIVATE_KEY }}

      # - name: Upload release assets
      #   #if: startsWith(github.ref, 'refs/tags/v')
      #   uses: softprops/action-gh-release@v1
      #   with:
      #     files: |
      #       $PWD/build/DropInDemo.ipa
      #       $PWD/build/DropInDemo.app.dSYM.zip
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - name: Upload app to App Store Connect
      #   #if: startsWith(github.ref, 'refs/tags/v')
      #   env:
      #     APP_STORE_CONNECT_USERNAME: ${{ secrets.APP_STORE_CONNECT_USERNAME }}
      #     APP_STORE_CONNECT_PASSWORD: ${{ secrets.APP_STORE_CONNECT_PASSWORD }}
      #   run: |
      #     xcrun altool --upload-app -t ios -f "$SCHEME.ipa" -u "$APP_STORE_CONNECT_USERNAME" -p "$APP_STORE_CONNECT_PASSWORD"